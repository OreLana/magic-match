{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","console","log","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAwBeA,EArBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAQjD,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAW,GAArC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBAAKF,UAAU,OACdC,IAAI,iBACHE,QAZY,WACbJ,GACHF,EAAaD,IAWTM,IAAI,oBCdRE,G,MAAa,CACjB,CAAC,IAAO,mBAAoBC,SAAS,GACrC,CAAC,IAAO,mBAAoBA,SAAS,GACrC,CAAC,IAAO,iBAAkBA,SAAS,GACnC,CAAC,IAAO,mBAAoBA,SAAS,GACrC,CAAC,IAAO,mBAAoBA,SAAS,GACrC,CAAC,IAAO,kBAAmBA,SAAS,KA0FvBC,MAvFf,WAAe,MAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGYF,mBAAS,GAHrB,mBAGNG,EAHM,KAGCC,EAHD,OAIqBJ,mBAAS,MAJ9B,mBAINK,EAJM,KAIKC,EAJL,OAKqBN,mBAAS,MAL9B,mBAKNO,EALM,KAKKC,EALL,OAMmBR,oBAAS,GAN5B,mBAMNR,EANM,KAMIiB,EANJ,KAUPC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAcA,GAAf,IAAqB2B,GAAIH,KAAKC,cAErCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAILd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIhD4B,qBAAU,WACJZ,GAAaE,IACbE,GAAY,GAEVJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,QAIb8B,KAEAC,YAAW,kBAAMD,MAAa,QAGjC,CAACd,EAAWE,IAEfc,QAAQC,IAAIrB,GAGZ,IAAMkB,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAmB,GAAS,OAAIA,EAAU,KAChCd,GAAY,IASd,OALAQ,qBAAU,WACTP,MACE,IAID,sBAAKjB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASc,EAAjB,sBAEA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAD,CAEAA,KAAMA,EACNC,aAAgBA,EAChBC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAYA,GAJNH,EAAK2B,SAQf,wCAAWb,SCvFjBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3648c0f7.chunk.js","sourcesContent":["import React from \"react\";\nimport './SingleCard.css'\n\nconst SingleCard = ({ card, handleChoice, flipped, disabled }) => {\n\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card) \n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <div className={flipped ? \"flipped\": \"\"}>\n        <img className=\"front\" src={card.src} alt=\"card front\" />\n        <img className=\"back\"\n         src=\"/img/cover.png\"\n          onClick={handleClick} \n          alt=\"card back\" />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleCard;\n","import { useEffect, useState } from 'react';\nimport SingleCard from './components/SingleCard';\nimport './App.css';\n\nconst cardImages = [\n  {\"src\": \"img/helmet-1.png\", matched: false },\n  {\"src\": \"img/potion-1.png\", matched: false },\n  {\"src\": \"img/ring-1.png\", matched: false },\n  {\"src\": \"img/scroll-1.png\", matched: false },\n  {\"src\": \"img/shield-1.png\", matched: false },\n  {\"src\": \"img/sword-1.png\", matched: false }\n];\n\nfunction App() {   //This is a component\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] =useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // Shuffle Cards\n  // This is a function within this component to shuffle the cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({...card, id: Math.random() }))  \n\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n // handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  }\n\n  //compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n        setDisabled(true)\n        \n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true}\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        setTimeout(() => resetTurn(), 1000)\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n  console.log(cards)\n\n  // reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns+1)\n    setDisabled(false)\n  }\n\n  // start a new game automagically\n  useEffect(() => {\n   shuffleCards()\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard \n          key= {card.id} \n          card={card}\n          handleChoice = {handleChoice}\n          flipped={card === choiceOne || card === choiceTwo || card.matched}\n          disabled = {disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}